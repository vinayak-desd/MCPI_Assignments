
Day03_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003b0  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000538  08000538  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000538  08000538  00002004  2**0
                  CONTENTS
  4 .ARM          00000000  08000538  08000538  00002004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000538  08000538  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000538  08000538  00001538  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800053c  0800053c  0000153c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  08000540  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00002004  2**0
                  CONTENTS
 10 .bss          0000001c  20000004  20000004  00002004  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00002004  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000d1c  00000000  00000000  0000202e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003d8  00000000  00000000  00002d4a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00003128  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000084  00000000  00000000  000031f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00017fbc  00000000  00000000  00003274  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000fd9  00000000  00000000  0001b230  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008b738  00000000  00000000  0001c209  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a7941  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001d8  00000000  00000000  000a7984  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 0000001f  00000000  00000000  000a7b5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 0000005d  00000000  00000000  000a7b7b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000004 	.word	0x20000004
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000520 	.word	0x08000520

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000008 	.word	0x20000008
 80001c4:	08000520 	.word	0x08000520

080001c8 <DelayMs>:
uint32_t DWT_Init(void);

#ifndef DELAY_MS
#define DELAY_MS

static inline void DelayMs(volatile uint32_t ms) {
 80001c8:	b480      	push	{r7}
 80001ca:	b085      	sub	sp, #20
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
	uint32_t init_ticks = DWT->CYCCNT;
 80001d0:	4b0e      	ldr	r3, [pc, #56]	@ (800020c <DelayMs+0x44>)
 80001d2:	685b      	ldr	r3, [r3, #4]
 80001d4:	60fb      	str	r3, [r7, #12]
	uint32_t ticks = (SystemCoreClock / 1000);
 80001d6:	4b0e      	ldr	r3, [pc, #56]	@ (8000210 <DelayMs+0x48>)
 80001d8:	681b      	ldr	r3, [r3, #0]
 80001da:	4a0e      	ldr	r2, [pc, #56]	@ (8000214 <DelayMs+0x4c>)
 80001dc:	fba2 2303 	umull	r2, r3, r2, r3
 80001e0:	099b      	lsrs	r3, r3, #6
 80001e2:	60bb      	str	r3, [r7, #8]
	ms *= ticks;
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	68ba      	ldr	r2, [r7, #8]
 80001e8:	fb02 f303 	mul.w	r3, r2, r3
 80001ec:	607b      	str	r3, [r7, #4]
	while ((DWT->CYCCNT - init_ticks) < ms);
 80001ee:	bf00      	nop
 80001f0:	4b06      	ldr	r3, [pc, #24]	@ (800020c <DelayMs+0x44>)
 80001f2:	685a      	ldr	r2, [r3, #4]
 80001f4:	68fb      	ldr	r3, [r7, #12]
 80001f6:	1ad2      	subs	r2, r2, r3
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	429a      	cmp	r2, r3
 80001fc:	d3f8      	bcc.n	80001f0 <DelayMs+0x28>
}
 80001fe:	bf00      	nop
 8000200:	bf00      	nop
 8000202:	3714      	adds	r7, #20
 8000204:	46bd      	mov	sp, r7
 8000206:	bc80      	pop	{r7}
 8000208:	4770      	bx	lr
 800020a:	bf00      	nop
 800020c:	e0001000 	.word	0xe0001000
 8000210:	20000000 	.word	0x20000000
 8000214:	10624dd3 	.word	0x10624dd3

08000218 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000218:	b580      	push	{r7, lr}
 800021a:	af00      	add	r7, sp, #0
	SystemInit();
 800021c:	f000 f8fc 	bl	8000418 <SystemInit>
	DelayMs(1);
 8000220:	2001      	movs	r0, #1
 8000222:	f7ff ffd1 	bl	80001c8 <DelayMs>
	LEDInIt(LED_green);
 8000226:	200c      	movs	r0, #12
 8000228:	f000 f85c 	bl	80002e4 <LEDInIt>
	LEDInIt(LED_orange);
 800022c:	200d      	movs	r0, #13
 800022e:	f000 f859 	bl	80002e4 <LEDInIt>
	LEDInIt(LED_red);
 8000232:	200e      	movs	r0, #14
 8000234:	f000 f856 	bl	80002e4 <LEDInIt>
	LEDInIt(LED_blue);
 8000238:	200f      	movs	r0, #15
 800023a:	f000 f853 	bl	80002e4 <LEDInIt>

	while(1)
	{
		LEDblink(LED_green,500);
 800023e:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000242:	200c      	movs	r0, #12
 8000244:	f000 f8d6 	bl	80003f4 <LEDblink>
		LEDblink(LED_orange,500);
 8000248:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 800024c:	200d      	movs	r0, #13
 800024e:	f000 f8d1 	bl	80003f4 <LEDblink>
		LEDblink(LED_red,500);
 8000252:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000256:	200e      	movs	r0, #14
 8000258:	f000 f8cc 	bl	80003f4 <LEDblink>
		LEDblink(LED_blue,500);
 800025c:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000260:	200f      	movs	r0, #15
 8000262:	f000 f8c7 	bl	80003f4 <LEDblink>


		LEDblink(LED_red,500);
 8000266:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 800026a:	200e      	movs	r0, #14
 800026c:	f000 f8c2 	bl	80003f4 <LEDblink>
		LEDblink(LED_orange,500);
 8000270:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000274:	200d      	movs	r0, #13
 8000276:	f000 f8bd 	bl	80003f4 <LEDblink>
		LEDblink(LED_green,500);
 800027a:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 800027e:	200c      	movs	r0, #12
 8000280:	f000 f8b8 	bl	80003f4 <LEDblink>
		LEDblink(LED_blue,500);
 8000284:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000288:	200f      	movs	r0, #15
 800028a:	f000 f8b3 	bl	80003f4 <LEDblink>
		LEDblink(LED_green,500);
 800028e:	bf00      	nop
 8000290:	e7d5      	b.n	800023e <main+0x26>
	...

08000294 <DelayMs>:
static inline void DelayMs(volatile uint32_t ms) {
 8000294:	b480      	push	{r7}
 8000296:	b085      	sub	sp, #20
 8000298:	af00      	add	r7, sp, #0
 800029a:	6078      	str	r0, [r7, #4]
	uint32_t init_ticks = DWT->CYCCNT;
 800029c:	4b0e      	ldr	r3, [pc, #56]	@ (80002d8 <DelayMs+0x44>)
 800029e:	685b      	ldr	r3, [r3, #4]
 80002a0:	60fb      	str	r3, [r7, #12]
	uint32_t ticks = (SystemCoreClock / 1000);
 80002a2:	4b0e      	ldr	r3, [pc, #56]	@ (80002dc <DelayMs+0x48>)
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	4a0e      	ldr	r2, [pc, #56]	@ (80002e0 <DelayMs+0x4c>)
 80002a8:	fba2 2303 	umull	r2, r3, r2, r3
 80002ac:	099b      	lsrs	r3, r3, #6
 80002ae:	60bb      	str	r3, [r7, #8]
	ms *= ticks;
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	68ba      	ldr	r2, [r7, #8]
 80002b4:	fb02 f303 	mul.w	r3, r2, r3
 80002b8:	607b      	str	r3, [r7, #4]
	while ((DWT->CYCCNT - init_ticks) < ms);
 80002ba:	bf00      	nop
 80002bc:	4b06      	ldr	r3, [pc, #24]	@ (80002d8 <DelayMs+0x44>)
 80002be:	685a      	ldr	r2, [r3, #4]
 80002c0:	68fb      	ldr	r3, [r7, #12]
 80002c2:	1ad2      	subs	r2, r2, r3
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	429a      	cmp	r2, r3
 80002c8:	d3f8      	bcc.n	80002bc <DelayMs+0x28>
}
 80002ca:	bf00      	nop
 80002cc:	bf00      	nop
 80002ce:	3714      	adds	r7, #20
 80002d0:	46bd      	mov	sp, r7
 80002d2:	bc80      	pop	{r7}
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	e0001000 	.word	0xe0001000
 80002dc:	20000000 	.word	0x20000000
 80002e0:	10624dd3 	.word	0x10624dd3

080002e4 <LEDInIt>:
#include "myled.h"//my header file
#include "stm32f4xx.h"//stm32f4 header file

void LEDInIt(uint32_t pin) //function to initialize in built LED
{
 80002e4:	b480      	push	{r7}
 80002e6:	b083      	sub	sp, #12
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	6078      	str	r0, [r7, #4]
	RCC->AHB1ENR |= BV(LEDGPIO_en);
 80002ec:	4b29      	ldr	r3, [pc, #164]	@ (8000394 <LEDInIt+0xb0>)
 80002ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002f0:	4a28      	ldr	r2, [pc, #160]	@ (8000394 <LEDInIt+0xb0>)
 80002f2:	f043 0308 	orr.w	r3, r3, #8
 80002f6:	6313      	str	r3, [r2, #48]	@ 0x30
	LEDGPIO->MODER &= ~BV(pin*2+1);
 80002f8:	4b27      	ldr	r3, [pc, #156]	@ (8000398 <LEDInIt+0xb4>)
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	687a      	ldr	r2, [r7, #4]
 80002fe:	0052      	lsls	r2, r2, #1
 8000300:	3201      	adds	r2, #1
 8000302:	2101      	movs	r1, #1
 8000304:	fa01 f202 	lsl.w	r2, r1, r2
 8000308:	43d2      	mvns	r2, r2
 800030a:	4611      	mov	r1, r2
 800030c:	4a22      	ldr	r2, [pc, #136]	@ (8000398 <LEDInIt+0xb4>)
 800030e:	400b      	ands	r3, r1
 8000310:	6013      	str	r3, [r2, #0]
	LEDGPIO->MODER |= BV(pin*2);
 8000312:	4b21      	ldr	r3, [pc, #132]	@ (8000398 <LEDInIt+0xb4>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	687a      	ldr	r2, [r7, #4]
 8000318:	0052      	lsls	r2, r2, #1
 800031a:	2101      	movs	r1, #1
 800031c:	fa01 f202 	lsl.w	r2, r1, r2
 8000320:	4611      	mov	r1, r2
 8000322:	4a1d      	ldr	r2, [pc, #116]	@ (8000398 <LEDInIt+0xb4>)
 8000324:	430b      	orrs	r3, r1
 8000326:	6013      	str	r3, [r2, #0]
	LEDGPIO->OSPEEDR &= ~BV(pin*2+1) | BV(pin*2);
 8000328:	4b1b      	ldr	r3, [pc, #108]	@ (8000398 <LEDInIt+0xb4>)
 800032a:	689b      	ldr	r3, [r3, #8]
 800032c:	687a      	ldr	r2, [r7, #4]
 800032e:	0052      	lsls	r2, r2, #1
 8000330:	3201      	adds	r2, #1
 8000332:	2101      	movs	r1, #1
 8000334:	fa01 f202 	lsl.w	r2, r1, r2
 8000338:	43d1      	mvns	r1, r2
 800033a:	687a      	ldr	r2, [r7, #4]
 800033c:	0052      	lsls	r2, r2, #1
 800033e:	2001      	movs	r0, #1
 8000340:	fa00 f202 	lsl.w	r2, r0, r2
 8000344:	430a      	orrs	r2, r1
 8000346:	4611      	mov	r1, r2
 8000348:	4a13      	ldr	r2, [pc, #76]	@ (8000398 <LEDInIt+0xb4>)
 800034a:	400b      	ands	r3, r1
 800034c:	6093      	str	r3, [r2, #8]
	LEDGPIO->PUPDR &= ~BV(pin*2+1) | BV(pin*2);
 800034e:	4b12      	ldr	r3, [pc, #72]	@ (8000398 <LEDInIt+0xb4>)
 8000350:	68db      	ldr	r3, [r3, #12]
 8000352:	687a      	ldr	r2, [r7, #4]
 8000354:	0052      	lsls	r2, r2, #1
 8000356:	3201      	adds	r2, #1
 8000358:	2101      	movs	r1, #1
 800035a:	fa01 f202 	lsl.w	r2, r1, r2
 800035e:	43d1      	mvns	r1, r2
 8000360:	687a      	ldr	r2, [r7, #4]
 8000362:	0052      	lsls	r2, r2, #1
 8000364:	2001      	movs	r0, #1
 8000366:	fa00 f202 	lsl.w	r2, r0, r2
 800036a:	430a      	orrs	r2, r1
 800036c:	4611      	mov	r1, r2
 800036e:	4a0a      	ldr	r2, [pc, #40]	@ (8000398 <LEDInIt+0xb4>)
 8000370:	400b      	ands	r3, r1
 8000372:	60d3      	str	r3, [r2, #12]
	LEDGPIO->OTYPER &= ~BV(pin);
 8000374:	4b08      	ldr	r3, [pc, #32]	@ (8000398 <LEDInIt+0xb4>)
 8000376:	685b      	ldr	r3, [r3, #4]
 8000378:	2101      	movs	r1, #1
 800037a:	687a      	ldr	r2, [r7, #4]
 800037c:	fa01 f202 	lsl.w	r2, r1, r2
 8000380:	43d2      	mvns	r2, r2
 8000382:	4611      	mov	r1, r2
 8000384:	4a04      	ldr	r2, [pc, #16]	@ (8000398 <LEDInIt+0xb4>)
 8000386:	400b      	ands	r3, r1
 8000388:	6053      	str	r3, [r2, #4]
}
 800038a:	bf00      	nop
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	bc80      	pop	{r7}
 8000392:	4770      	bx	lr
 8000394:	40023800 	.word	0x40023800
 8000398:	40020c00 	.word	0x40020c00

0800039c <LEDon>:

void LEDon(uint32_t pin)
{
 800039c:	b480      	push	{r7}
 800039e:	b083      	sub	sp, #12
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	6078      	str	r0, [r7, #4]
	LEDGPIO->ODR |= BV(pin);
 80003a4:	4b07      	ldr	r3, [pc, #28]	@ (80003c4 <LEDon+0x28>)
 80003a6:	695b      	ldr	r3, [r3, #20]
 80003a8:	2101      	movs	r1, #1
 80003aa:	687a      	ldr	r2, [r7, #4]
 80003ac:	fa01 f202 	lsl.w	r2, r1, r2
 80003b0:	4611      	mov	r1, r2
 80003b2:	4a04      	ldr	r2, [pc, #16]	@ (80003c4 <LEDon+0x28>)
 80003b4:	430b      	orrs	r3, r1
 80003b6:	6153      	str	r3, [r2, #20]
}
 80003b8:	bf00      	nop
 80003ba:	370c      	adds	r7, #12
 80003bc:	46bd      	mov	sp, r7
 80003be:	bc80      	pop	{r7}
 80003c0:	4770      	bx	lr
 80003c2:	bf00      	nop
 80003c4:	40020c00 	.word	0x40020c00

080003c8 <LEDoff>:
void LEDoff(uint32_t pin)
{
 80003c8:	b480      	push	{r7}
 80003ca:	b083      	sub	sp, #12
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
	LEDGPIO->ODR &= ~BV(pin);
 80003d0:	4b07      	ldr	r3, [pc, #28]	@ (80003f0 <LEDoff+0x28>)
 80003d2:	695b      	ldr	r3, [r3, #20]
 80003d4:	2101      	movs	r1, #1
 80003d6:	687a      	ldr	r2, [r7, #4]
 80003d8:	fa01 f202 	lsl.w	r2, r1, r2
 80003dc:	43d2      	mvns	r2, r2
 80003de:	4611      	mov	r1, r2
 80003e0:	4a03      	ldr	r2, [pc, #12]	@ (80003f0 <LEDoff+0x28>)
 80003e2:	400b      	ands	r3, r1
 80003e4:	6153      	str	r3, [r2, #20]
}
 80003e6:	bf00      	nop
 80003e8:	370c      	adds	r7, #12
 80003ea:	46bd      	mov	sp, r7
 80003ec:	bc80      	pop	{r7}
 80003ee:	4770      	bx	lr
 80003f0:	40020c00 	.word	0x40020c00

080003f4 <LEDblink>:
void LEDblink(uint32_t pin,uint32_t delay)
{
 80003f4:	b580      	push	{r7, lr}
 80003f6:	b082      	sub	sp, #8
 80003f8:	af00      	add	r7, sp, #0
 80003fa:	6078      	str	r0, [r7, #4]
 80003fc:	6039      	str	r1, [r7, #0]
	LEDon(pin);
 80003fe:	6878      	ldr	r0, [r7, #4]
 8000400:	f7ff ffcc 	bl	800039c <LEDon>
	DelayMs(delay);
 8000404:	6838      	ldr	r0, [r7, #0]
 8000406:	f7ff ff45 	bl	8000294 <DelayMs>
	LEDoff(pin);
 800040a:	6878      	ldr	r0, [r7, #4]
 800040c:	f7ff ffdc 	bl	80003c8 <LEDoff>
}
 8000410:	bf00      	nop
 8000412:	3708      	adds	r7, #8
 8000414:	46bd      	mov	sp, r7
 8000416:	bd80      	pop	{r7, pc}

08000418 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000418:	b580      	push	{r7, lr}
 800041a:	af00      	add	r7, sp, #0
  DWT_Init();
 800041c:	f000 f802 	bl	8000424 <DWT_Init>
}
 8000420:	bf00      	nop
 8000422:	bd80      	pop	{r7, pc}

08000424 <DWT_Init>:
}
#pragma GCC pop_options


uint32_t DWT_Init(void)
{
 8000424:	b480      	push	{r7}
 8000426:	af00      	add	r7, sp, #0
    /* Disable TRC */
    CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 8000428:	4b14      	ldr	r3, [pc, #80]	@ (800047c <DWT_Init+0x58>)
 800042a:	68db      	ldr	r3, [r3, #12]
 800042c:	4a13      	ldr	r2, [pc, #76]	@ (800047c <DWT_Init+0x58>)
 800042e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8000432:	60d3      	str	r3, [r2, #12]
    /* Enable TRC */
    CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 8000434:	4b11      	ldr	r3, [pc, #68]	@ (800047c <DWT_Init+0x58>)
 8000436:	68db      	ldr	r3, [r3, #12]
 8000438:	4a10      	ldr	r2, [pc, #64]	@ (800047c <DWT_Init+0x58>)
 800043a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800043e:	60d3      	str	r3, [r2, #12]
    /* Disable clock cycle counter */
    DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 8000440:	4b0f      	ldr	r3, [pc, #60]	@ (8000480 <DWT_Init+0x5c>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	4a0e      	ldr	r2, [pc, #56]	@ (8000480 <DWT_Init+0x5c>)
 8000446:	f023 0301 	bic.w	r3, r3, #1
 800044a:	6013      	str	r3, [r2, #0]
    /* Enable  clock cycle counter */
    DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 800044c:	4b0c      	ldr	r3, [pc, #48]	@ (8000480 <DWT_Init+0x5c>)
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	4a0b      	ldr	r2, [pc, #44]	@ (8000480 <DWT_Init+0x5c>)
 8000452:	f043 0301 	orr.w	r3, r3, #1
 8000456:	6013      	str	r3, [r2, #0]
    /* Reset the clock cycle counter value */
    DWT->CYCCNT = 0;
 8000458:	4b09      	ldr	r3, [pc, #36]	@ (8000480 <DWT_Init+0x5c>)
 800045a:	2200      	movs	r2, #0
 800045c:	605a      	str	r2, [r3, #4]
    /* 3 NO OPERATION instructions */
    __ASM volatile ("NOP");
 800045e:	bf00      	nop
    __ASM volatile ("NOP");
 8000460:	bf00      	nop
    __ASM volatile ("NOP");
 8000462:	bf00      	nop
    /* Check if clock cycle counter has started: 0 on success */
    return !(DWT->CYCCNT);
 8000464:	4b06      	ldr	r3, [pc, #24]	@ (8000480 <DWT_Init+0x5c>)
 8000466:	685b      	ldr	r3, [r3, #4]
 8000468:	2b00      	cmp	r3, #0
 800046a:	bf0c      	ite	eq
 800046c:	2301      	moveq	r3, #1
 800046e:	2300      	movne	r3, #0
 8000470:	b2db      	uxtb	r3, r3
}
 8000472:	4618      	mov	r0, r3
 8000474:	46bd      	mov	sp, r7
 8000476:	bc80      	pop	{r7}
 8000478:	4770      	bx	lr
 800047a:	bf00      	nop
 800047c:	e000edf0 	.word	0xe000edf0
 8000480:	e0001000 	.word	0xe0001000

08000484 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000484:	480d      	ldr	r0, [pc, #52]	@ (80004bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000486:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000488:	f7ff ffc6 	bl	8000418 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800048c:	480c      	ldr	r0, [pc, #48]	@ (80004c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800048e:	490d      	ldr	r1, [pc, #52]	@ (80004c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000490:	4a0d      	ldr	r2, [pc, #52]	@ (80004c8 <LoopForever+0xe>)
  movs r3, #0
 8000492:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000494:	e002      	b.n	800049c <LoopCopyDataInit>

08000496 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000496:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000498:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800049a:	3304      	adds	r3, #4

0800049c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800049c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800049e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a0:	d3f9      	bcc.n	8000496 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004a2:	4a0a      	ldr	r2, [pc, #40]	@ (80004cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80004a4:	4c0a      	ldr	r4, [pc, #40]	@ (80004d0 <LoopForever+0x16>)
  movs r3, #0
 80004a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004a8:	e001      	b.n	80004ae <LoopFillZerobss>

080004aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004ac:	3204      	adds	r2, #4

080004ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b0:	d3fb      	bcc.n	80004aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004b2:	f000 f811 	bl	80004d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004b6:	f7ff feaf 	bl	8000218 <main>

080004ba <LoopForever>:

LoopForever:
  b LoopForever
 80004ba:	e7fe      	b.n	80004ba <LoopForever>
  ldr   r0, =_estack
 80004bc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004c4:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80004c8:	08000540 	.word	0x08000540
  ldr r2, =_sbss
 80004cc:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80004d0:	20000020 	.word	0x20000020

080004d4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004d4:	e7fe      	b.n	80004d4 <ADC_IRQHandler>
	...

080004d8 <__libc_init_array>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	4d0d      	ldr	r5, [pc, #52]	@ (8000510 <__libc_init_array+0x38>)
 80004dc:	4c0d      	ldr	r4, [pc, #52]	@ (8000514 <__libc_init_array+0x3c>)
 80004de:	1b64      	subs	r4, r4, r5
 80004e0:	10a4      	asrs	r4, r4, #2
 80004e2:	2600      	movs	r6, #0
 80004e4:	42a6      	cmp	r6, r4
 80004e6:	d109      	bne.n	80004fc <__libc_init_array+0x24>
 80004e8:	4d0b      	ldr	r5, [pc, #44]	@ (8000518 <__libc_init_array+0x40>)
 80004ea:	4c0c      	ldr	r4, [pc, #48]	@ (800051c <__libc_init_array+0x44>)
 80004ec:	f000 f818 	bl	8000520 <_init>
 80004f0:	1b64      	subs	r4, r4, r5
 80004f2:	10a4      	asrs	r4, r4, #2
 80004f4:	2600      	movs	r6, #0
 80004f6:	42a6      	cmp	r6, r4
 80004f8:	d105      	bne.n	8000506 <__libc_init_array+0x2e>
 80004fa:	bd70      	pop	{r4, r5, r6, pc}
 80004fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000500:	4798      	blx	r3
 8000502:	3601      	adds	r6, #1
 8000504:	e7ee      	b.n	80004e4 <__libc_init_array+0xc>
 8000506:	f855 3b04 	ldr.w	r3, [r5], #4
 800050a:	4798      	blx	r3
 800050c:	3601      	adds	r6, #1
 800050e:	e7f2      	b.n	80004f6 <__libc_init_array+0x1e>
 8000510:	08000538 	.word	0x08000538
 8000514:	08000538 	.word	0x08000538
 8000518:	08000538 	.word	0x08000538
 800051c:	0800053c 	.word	0x0800053c

08000520 <_init>:
 8000520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000522:	bf00      	nop
 8000524:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000526:	bc08      	pop	{r3}
 8000528:	469e      	mov	lr, r3
 800052a:	4770      	bx	lr

0800052c <_fini>:
 800052c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800052e:	bf00      	nop
 8000530:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000532:	bc08      	pop	{r3}
 8000534:	469e      	mov	lr, r3
 8000536:	4770      	bx	lr
